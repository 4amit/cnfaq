

1.The transport layer protocols used for real time multimedia, file transfer, DNS and email, respectively are:
UDP, TCP, UDP and TCP

2.Which of the following transport layer protocols is used to support electronic mail?
TCP

3.Which one of the following uses UDP as the transport protocol? 
DNS

4. Transport layer aggregates data from different applications into a single stream before passing it to
Network layer

5.Which one of the following is a transport layer protocol used in internet?
TCP and UDP

6.A _____ is a TCP name for a transport service access point. 
Port

7.Transport layer protocols deals with: 
process to process communication

8.Which one of the following is a transport layer protocol? 
stream control transmission protocol

9. What is trasnport layer?
In the Open Systems Interconnection (OSI) communications model, the Transport layer ensures
the reliable arrival of messages and provides error checking mechanisms and data flow controls.
The Transport layer provides services for both "connection-mode" transmissions and for
"connectionless-mode" transmissions. For connection-mode transmissions, a transmission
may be sent or arrive in the form of packets that need to be reconstructed into a complete
message at the other end.

10.Transport layer protocols deals with?
Process to process communication.


11. Compare TCP & UDP
    TCP:
        Transmission Control Protocol
        TCP is a connection-oriented protocol.
        As a message makes its way across the internet from one computer to another. This is connection based.
        Protocol Used: HTTP, HTTPs, FTP, SMTP, Telnet
        The speed for TCP is slower than UDP.
        TCP header size is 20 bytes
    UDP:
         	User Datagram Protocol or Universal Datagram Protocol
          UDP is a connectionless protocol.
          UDP is also a protocol used in message transport or transfer. This is not connection based 
              which means that one program can send a load of packets to another and that would be the end of the relationship.
          Protocol Used: DNS, DHCP, TFTP, SNMP, RIP, VOIP.
          UDP Header size is 8 bytes.
          
12. What is the function of transport layer?  
    OSI Model, Layer 4, provides transparent transfer of data between end systems, or hosts, and is responsible for 
    end-to-end error recovery and flow control. It ensures complete data transfer.

    Transport examples include SPX, TCP, UDP.
    
13.Which protocols operate at the transport layer?
   There are five basic protocols for the Transport Layer
    Transmission Control Protocol (TCP)
    User Datagram Protocol (UDP)
    Datagram Congestion Control Protocol (DCCP)
    Stream Control Transmission Protocol (SCTP)
    Resource Reservation Protocol (RSVP)

    Transport examples include SPX, TCP, UDP
    
14. What is congestion?
    Network congestion in data networking and queueing theory is the reduced quality of service that occurs when a network node is carrying more data than it can handle. Typical effects include queueing delay, packet loss or the blocking of new connections.

15. Which layers do congestion control?
    Transport layer and network layer

16. What is Traffic Shaping?
    Traffic shaping, also known as packet shaping, Quality of Service (QoS) or bandwidth management, is the manipulation and prioritization of network traffic to reduce the impact of heavy users or machines from effecting other users.

17. What is Socket-style API for windows called?
    winsock

18. User datagram protocol is called connectionless because?
    All UDP packets are treated independently by transport layer

19. An endpoint of an inter-process communication flow across a computer network is called
    Socket

20. Socket-style API for windows is called
    Winsock

21.  Which protocol does DHCP use at the Transport layer?
    a. 	IP
    b. 	TCP
    c. 	UDP
    d. 	ARP
Ans. c.

22.  Two types of Connection Control?
Ans.Connectionless Transport Layer : Each segment is considered as an independent packet and delivered to 
    the transport layer at the destination machine.
    Connection Oriented Transport Layer : Before delivering packets, connection is made with transport
    layer at the destination machine.
    
23. What is DNS in application layer?

Domain Name System (DNS) is one of the industry-standard suite of protocols that comprise TCP/IP. Microsoft Windows Server 2003. DNS is implemented using two software components: the DNS server and the DNS client (or resolver). Both components are run as background service applications.

Network resources are identified by numeric IP addresses, but these IP addresses are difficult for network users to remember. The DNS database contains records that map user-friendly alphanumeric names for network resources to the IP address used by those resources for communication.

24. What are the services of transport layer ?

As layer four of the OSI model, the transport layer is responsible for providing communication services between computers on a network. 
For example, as the data packets transit between the originating or sending computer and the destination or receiving computer, the 
transport layer performs error checking and data packet routing services. Additionally, while working with the three lower and three 
upper layers, the transport layer continues to provide services, even though different application software processes are running 
simultaneously on multiple computers.

25. What are the problems faced in stream of packet? How can we solve them?
Ans. Problems
        There can be problems such as: 
        (i) the packets can go out of sequence, 
        (ii) packets might get lost and never arrive,
        (iii) they might arrive but be corrupt, and 
        (iv) packets might arrive faster than the receiver can deal with them. 
   
    All of these are problems that must be solved by the transport (TCP) level software. The solution is
    to require acknowledgement of receipt of the packets and to retransmit them if they are not acknowledged.
    
    The simplest solution is that the sender can only transmit the next packet when the previous one has been
    acknowledged (ACK-ed):
    Whenever a packet is sent a timer is started, if a timeout occurs before an acknowledgement is received
    (which suggests a lost packet) the sender must re-transmit the last packet.
    However this is very slow and wasteful, there might be several packets to send but they cannot be sent
    until the ACK is returned, that means waiting for the full RTT (round trip time) for the packet to reach the
    receiver and the ACK to get back.

26. What is Packet “windows”?
Ans. It is an improvement to the above mentioned solution. 
     Which is to have a window of packets awaiting acknowledgement. Both ends will agree a window
     size of n packets (for example n=3), this is the number of packets the sender can send without an
     acknowledgement. In the following diagram the sender sends 3 packets but must then wait for an ACK for
     packet 1 from the receiver. As soon as it gets the ACK it can continue to transmit packet 4.
     
                 SENDER                          RECEIVER
            
  i.             send 1
            
  ii.            send 2

  iii.           send 3                         get 1. send ack 1
           
   iv.                                          get 2, send ack 2  
        
   v.          get ack 1, send 4                get 3, send ack 3

   vi.         get ack 2, send 5

  vii.         get ack 3, send 6                get 4, send ack 4
               
  viii.                                         get 5, send ack 5
 
  ix.          get ack 4, send 7                get 6, send ack 6


    The additional overheads of this are that the sender must keep all the packets sent but not yet acknowledged.
    Packet windows also cope with out of sequence packets. This requires that the receiver will save packets
    got ahead of the sequence number it expects and further that it doesn’t acknowledge until it has got all the
    ones up to the current sequence number.

27. What is End to end flow control?
Ans. End to end flow control
    If the receiving host on one connection cannot keep up with the rate of arrival of packets because it has
    limited buffer space and its application isn’t consuming the data fast enough then it can ask the sender to
    reduce the window size so it will not receive so much data, it can, if necessary, reduce the window to zero.
    It does this by using the WINDOW field in ACK packets.

28. Explain Network congestion.
Ans. Network congestion and flow control are different things.
    Sometimes Internet IP packet routers get overloaded and congested,
    if that happens they will have to discard some packets. What could happen, if the sliding window packet
    retransmission software is too simple, is that it will immediately respond by retransmitting all the lost
    packets. This will make the congestion worse! All “good” implementations of TCP should respond more
    gently—if packets timeout then the TCP sender will reduce the window size and delay before retransmitting,
    if it still has timeouts it delay even longer. It will only start increasing the window size and cutting the delay
    when it starts receiving acknowledgements again.

29. Explain End-to-end communication.
Ans. End-to-end communication: ports
    TCP connections are between processes, IP datagrams are between hosts. Therefore the TCP layer must
    support distributing the arriving datagrams to the appropriate server program. It uses port numbers, This
    is not a process number because they are transitory and vary, it is a “conventional” number that selects a
    service, there are fixed numbers for well known services like 21 for FTP, 80 for WWW and 23 for telnet.
    Numbers below 1024 are reserved, higher numbers can be used by anybody (but might clash with existing
    services, see the file /etc/services). A process that provides a service informs the system that it will accept
    connections to a given port number. When a remote process tries to ask for a service on the machine it
    must give the port number aswell as the address and the transport layer uses this to select which process to
    connect to.
    TCP must record for every connection which process is bound to a port. It uses a unique 4 tuple to
    identify all connections:
    < src-port, src-ipaddr, dst-port, dst-ipaddr >
    a server port is obvious but the port of the client is not obvious, what TCP does is to create a unique port
    number for every outgoing client connection. Consequently if one computer makes 2 telnet connections
    to the same remote machine each connection will have a different 4-tuple to identify it.
    
30.
    
    
    


